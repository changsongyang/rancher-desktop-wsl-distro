#!/bin/sh

set -o errexit -o nounset -o pipefail

if [ -n "${XTRACE:-}" ]; then
    set -o xtrace
fi

: "${CACHE_DIR:=$PWD/AppData/Local/K3s-Cache}"
: "${LOGFILE:=/var/log/k3s.log}"

VERSION=${1:-}
# Use highest version in cache if version is not specified
# and the k3s symlink does not yet exist
if [ -z "${VERSION}" -a ! -f /usr/local/bin/k3s ]; then
    VERSION=$(ls -1 "${CACHE_DIR}" | sort -V | tail -1)
fi

# Update symlinks for k3s and images to new version
if [ -n "${VERSION}" ]; then
    K3S_DIR="${CACHE_DIR}/${VERSION}"
    if [ ! -d "${K3S_DIR}" ]; then
        echo "Directory ${K3S_DIR} does not exist"
        exit 1
    fi

    # Make sure any outdated kubeconfig file is gone
    mkdir -p /etc/rancher/k3s
    find /etc/rancher/k3s -name k3s.yaml -delete

    IMAGES=/var/lib/rancher/k3s/agent/images
    mkdir -p "${IMAGES}"
    find "${IMAGES}" -name k3s-airgap-images-amd64.tar -delete
    ln -s "${K3S_DIR}/k3s-airgap-images-amd64.tar" "${IMAGES}"

    find /usr/local/bin -name k3s -delete
    ln -s "${K3S_DIR}/k3s" /usr/local/bin
fi

# NORUN=1 just sets up symlinks but doesn't start k3s
if [ -z "${NORUN:-}" ]; then
    mkdir -p "$(dirname "${LOGFILE}")"
    IPTABLES_MODE=legacy screen -S k3s -d -m -L -Logfile "${LOGFILE}" /usr/local/bin/k3s server
    # WSL needs a little extra time to realize that screen has spawned a
    # background process. Otherwise the distro will just stop running.
    sleep 1
fi
